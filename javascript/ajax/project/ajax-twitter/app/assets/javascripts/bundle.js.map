{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/infinite_tweets.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;;;;;;;;;;;ACpEA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AClDA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ,IAAI,cAAc;AAClE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D,uBAAuB;AACpF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;;AAEA;;;;;;;;;;;ACxGA,gBAAgB,mBAAO,CAAC,6CAAe;AACvC,qBAAqB,mBAAO,CAAC,uDAAoB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA,kBAAkB,cAAc;;AAEhC;AACA,gCAAgC,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;UC/CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACrBA,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,oBAAoB,mBAAO,CAAC,qDAAmB;AAC/C,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,uBAAuB,mBAAO,CAAC,2DAAsB;;AAErD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH,CAAC","file":"bundle.js","sourcesContent":["const APIUtil = {\n  followUser: (id) => {\n    return new Promise((resolve) => {\n      $.ajax({\n        url: `/users/${id}/follow`,\n        dataType: \"json\",\n        type: \"POST\",\n        success: () => {\n          resolve();\n        },\n      });\n    });\n  },\n\n  unfollowUser: (id) => {\n    return new Promise((resolve) => {\n      $.ajax({\n        url: `/users/${id}/follow`,\n        dataType: \"json\",\n        type: \"DELETE\",\n        success: () => {\n          resolve();\n        },\n      });\n    });\n  },\n\n  searchUsers: (queryVal) => {\n    return new Promise((resolve) => {\n      $.ajax({\n        url: `/users/search?query=${queryVal}`,\n        dataType: \"json\",\n        type: \"GET\",\n        success: (data) => {\n          resolve(data);\n        },\n      });\n    });\n  },\n\n  createTweet: (data) => {\n    return new Promise((resolve) => {\n      $.ajax({\n        url: \"/tweets\",\n        dataType: \"json\",\n        type: \"POST\",\n        data: data,\n        success: (data) => {\n          resolve(data);\n        },\n      });\n    });\n  },\n\n  getTweets: () => {\n    return new Promise((resolve) => {\n      $.ajax({\n        url: \"/feed\",\n        dataType: \"json\",\n        type: \"GET\",\n        success: (data) => {\n          resolve(data);\n        },\n      });\n    });\n  },\n};\n\nmodule.exports = APIUtil;\n","const APIUtil = require(\"./api_util.js\");\n\nclass FollowToggle {\n  constructor(el, options) {\n    this.$el = $(el);\n    this.userId = this.$el.data(\"user-id\") || options.userId;\n    this.followState =\n      this.$el.data(\"initial-follow-state\") || options.followState;\n    this.render();\n\n    this.$el.on(\"click\", this.handleClick.bind(this));\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n\n    if (this.followState === \"unfollowed\") {\n      APIUtil.followUser(this.userId).then(() => {\n        this.followState = \"followed\";\n        this.render();\n      });\n\n      this.followState = \"following\";\n      this.render();\n    } else {\n      APIUtil.unfollowUser(this.userId).then(() => {\n        this.followState = \"unfollowed\";\n        this.render();\n      });\n\n      this.followState = \"unfollowing\";\n      this.render();\n    }\n  }\n\n  render() {\n    if (this.followState === \"unfollowed\") {\n      this.$el.html(\"Follow\");\n      this.$el.attr(\"disabled\", false);\n    } else if (this.followState === \"followed\") {\n      this.$el.html(\"Unfollow\");\n      this.$el.attr(\"disabled\", false);\n    } else if (this.followState === \"following\") {\n      this.$el.attr(\"disabled\", true);\n    } else if (this.followState === \"unfollowing\") {\n      this.$el.attr(\"disabled\", true);\n    }\n  }\n}\n\nmodule.exports = FollowToggle;\n","const APIUtil = require(\"./api_util.js\");\n\nclass InfiniteTweets {\n  constructor(el) {\n    this.$el = $(el);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.$el.on(\"click\", this.handleClick);\n  }\n\n  handleClick(event) {\n    this.fetchTweets();\n    APIUtil.getTweets();\n  }\n\n  fetchTweets() {}\n}\n\nmodule.exports = InfiniteTweets;\n","const APIUtil = require(\"./api_util\");\n\nconst newUserSelect = () => {\n  const $select = $(\"<select></select>\");\n  $select.attr(\"name\", \"tweet[mentioned_user_ids][]\");\n  const users = window.users;\n\n  users.forEach((user) => {\n    const $option = $(`<option value=\"${user.id}\">${user.username}</option>`);\n    $select.append($option);\n  });\n\n  const $div = $(\"<div></div>\");\n  const $a = $(\n    \"<a href='#remove-mentioned-user' class='remove-mentioned-user'>Remove</a>\"\n  );\n  $div.append($select);\n  $div.append($a);\n\n  return $div;\n};\n\nclass TweetCompose {\n  constructor(el) {\n    // form is el\n    this.$el = $(el);\n    this.$addMentions = this.$el.find(\".add-mentions\");\n\n    this.handleAddMentionsClick = this.handleAddMentionsClick.bind(this);\n    this.$addMentions.on(\"click\", this.handleAddMentionsClick);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.$el.on(\"submit\", this.handleSubmit);\n    this.$textArea = this.$el.find(\"textarea\");\n    this.handleTextAreaInput = this.handleTextAreaInput.bind(this);\n    this.$textArea.on(\"input\", this.handleTextAreaInput);\n    this.$addMention = this.$el.find(\".add-mention\");\n\n    this.handleAddMentionClick = this.handleAddMentionClick.bind(this);\n    this.$addMention.on(\"click\", this.handleAddMentionClick);\n  }\n\n  handleAddMentionsClick(event) {\n    const $targetElement = $(event.target);\n\n    if ($(event.currentTarget).find(\"a\").is($targetElement)) {\n      this.removeMentionedUser($targetElement);\n    }\n  }\n\n  removeMentionedUser($clickedATag) {\n    $clickedATag.parent().remove();\n  }\n\n  handleAddMentionClick(event) {\n    const $select = newUserSelect();\n    this.$addMentions.append($select);\n    // $select.insertBefore(this.$addMention);\n  }\n\n  handleTextAreaInput(event) {\n    const $strong = this.$el.find(\"strong\");\n    const maximumCharacters = 140;\n    const numCharactersTextArea = event.target.value.length;\n    const numRemainingCharacters = maximumCharacters - numCharactersTextArea;\n    const textCountdown = `Number of remaining characters: ${numRemainingCharacters}`;\n    $strong.html(textCountdown);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const data = this.$el.serializeJSON();\n    APIUtil.createTweet(data).then((data) => {\n      console.log(\"It works\");\n      this.handleSuccess(data);\n    });\n\n    const $inputs = this.$el.find(\":input\");\n    $inputs.attr(\"disabled\", true);\n  }\n\n  clearInput() {\n    const $inputs = this.$el\n      .find(\":input\")\n      .not(\"[type='submit']\")\n      .not(\"[type='button']\");\n\n    $inputs.val(\"\");\n    const $strong = this.$el.find(\"strong\");\n    $strong.html(\"\");\n    this.$addMentions.html(\"\");\n  }\n\n  handleSuccess(data) {\n    const $inputs = this.$el.find(\":input\");\n    $inputs.attr(\"disabled\", false);\n    this.clearInput();\n    const $ul = $(this.$el.attr(\"data-tweets-ul\"));\n    const $li = $(`<li>${data.content}</li>`);\n    $ul.prepend($li);\n  }\n}\n\nmodule.exports = TweetCompose;\n","const APIUtil = require(\"./api_util.js\");\nconst FollowToggle = require(\"./follow_toggle.js\");\n\nclass UsersSearch {\n  constructor(el) {\n    this.$el = $(el);\n    this.$input = this.$el.find(\"input\");\n    this.$ul = this.$el.find(\"ul\");\n\n    this.handleInput = this.handleInput.bind(this);\n\n    this.$input.on(\"input\", this.handleInput);\n  }\n\n  handleInput(event) {\n    APIUtil.searchUsers(event.target.value).then((users) => {\n      this.renderResults(users);\n    });\n  }\n\n  renderResults(users) {\n    this.$ul.empty();\n\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n\n      const $a = $(\"<a></a>\");\n      $a.text(`@${user.username}`);\n\n      const userId = user.id;\n      $a.attr(\"href\", `/users/${userId}`);\n\n      const $followToggle = $(\"<button></button>\");\n      console.log(FollowToggle);\n      new FollowToggle($followToggle, {\n        userId: user.id,\n        followState: user.followed ? \"followed\" : \"unfollowed\",\n      });\n\n      const $li = $(\"<li></li>\");\n      $li.append($a);\n      $li.append($followToggle);\n      this.$ul.append($li);\n    }\n  }\n}\n\nmodule.exports = UsersSearch;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle.js\");\nconst UsersSearch = require(\"./users_search.js\");\nconst TweetCompose = require(\"./tweet_compose.js\");\nconst InfiniteTweets = require(\"./infinite_tweets.js\");\n\n$(() => {\n  const $buttons = $(\"button.follow-toggle\");\n  $buttons.each((index, $button) => {\n    new FollowToggle($button);\n  });\n  const $usersSearches = $(\"nav.users-search\");\n  $usersSearches.each((index, $usersSearch) => {\n    new UsersSearch($usersSearch);\n  });\n  const $composeTweets = $(\".tweet-compose\");\n  $composeTweets.each((index, $composeTweet) => {\n    new TweetCompose($composeTweet);\n  });\n\n  const $fetchMores = $(\".fetch-more\");\n  $fetchMores.each((index, $fetchMore) => {\n    new InfiniteTweets($fetchMore);\n  });\n});\n"],"sourceRoot":""}